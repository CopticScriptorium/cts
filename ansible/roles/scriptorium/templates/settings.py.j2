"""
Django settings for coptic scriptorium project.

For more information on this file, see
https://docs.djangoproject.com/en/1.7/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.7/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys
BASE_DIR = os.path.dirname(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.7/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '{{ django_secret_key }}'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = {{ django_debug }} 
TEMPLATE_DEBUG = {{ django_debug }} 
ALLOWED_HOSTS = ['localhost', 'coptic.dev', 'data.copticscriptorium.org', 'ec2-52-10-63-34.us-west-2.compute.amazonaws.com']


# Application definition
INSTALLED_APPS = (
	'grappelli',
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'texts',
	'annis',
	'ingest',
	'urn',
	'api',
	'mod_wsgi.server'
)

MIDDLEWARE_CLASSES = (
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

TEMPLATE_CONTEXT_PROCESSORS = (
	"django.core.context_processors.request",
	"django.contrib.auth.context_processors.auth"
)

ROOT_URLCONF = 'coptic.urls'

WSGI_APPLICATION = 'coptic.wsgi.application'

LOGGING = {
	'version': 1,
	'disable_existing_loggers': False,
	'handlers': {
		'file': {
			'level': 'DEBUG',
			'class': 'logging.FileHandler',
			'filename': "/var/log/django/django_logger.log",
		},
		'console': {
			'class': 'logging.StreamHandler',
			'stream': sys.stdout,
		}
	},
	'loggers': {
		'ingest.ingest': {
			'handlers': ['console','file'],
			'level': 'DEBUG',
		},
		'ingest.models': {
			'handlers': ['console','file'],
			'level': 'DEBUG',
		}
	}
}


# Database
# https://docs.djangoproject.com/en/1.7/ref/settings/#databases
if 'RDS_DB_NAME' in os.environ:
	DATABASES = {
		'default': {
			'engine': 'mysql.connector.django',
			'NAME': os.environ['RDS_DB_NAME'],
			'USER': os.environ['RDS_USERNAME'],
			'PASSWORD': os.environ['RDS_PASSWORD'],
			'HOST': os.environ['RDS_HOSTNAME'],
			'PORT': os.environ['RDS_PORT'],
		}
	}
else:
	DATABASES = {
		'default': {
			'HOST' : '{{ mysql_host }}',
			'ENGINE': 'mysql.connector.django',
			'NAME' : "coptic",
			'USER' : "coptic",
			'PASSWORD' : "{{ mysql_password }}"
		}
	}


# Internationalization
# https://docs.djangoproject.com/en/1.7/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = False 


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.7/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = "/var/www/cts/coptic/static/"
# STATICFILES_DIRS = (
#	os.path.join(BASE_DIR, "static"),
#)


# Templates
TEMPLATE_DIRS = [os.path.join(BASE_DIR, 'templates')]
